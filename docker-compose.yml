services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: rag-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      # named volume for data
      - postgres_data:/var/lib/postgresql/data
      # bind mount for init script
      - ./infrastructure/docker/postgres/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}

  redis:
    image: redis/redis-stack:7.4.0-v7
    container_name: rag-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
      - "8001:8001"  # RedisInsight web UI
    volumes:
      - redis_data:/data
    environment:
      REDIS_ARGS: >-
        --appendonly ${REDIS_APPENDONLY}
        --maxmemory ${REDIS_MAXMEMORY}
        --maxmemory-policy ${REDIS_MAXMEMORY_POLICY}
    healthcheck:
      test: redis-cli ping

  mlflow:
    image: ghcr.io/mlflow/mlflow:v3.5.1
    container_name: rag-mlflow
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlflow
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri file:///mlflow
      --default-artifact-root file:///mlflow/artifacts
    healthcheck:
      test: curl -fsS http://localhost:5000/health || exit 1

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
    container_name: rag-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: >
      server /data
      --address ":9000"
      --console-address ":9001"
    healthcheck:
      test: curl -fsS http://localhost:9000/minio/health/ready || exit 1

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mlflow_data:
    driver: local
  minio_data:
    driver: local


